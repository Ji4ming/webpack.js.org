(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{407:function(n,s,a){"use strict";a.r(s),s.default='<p><a href="https://npmjs.com/package/sass-loader"><img src="https://img.shields.io/npm/v/sass-loader.svg" alt="npm"></a>\n<a href="https://nodejs.org/"><img src="https://img.shields.io/node/v/sass-loader.svg" alt="node"></a>\n<a href="https://david-dm.org/webpack-contrib/sass-loader"><img src="https://david-dm.org/webpack-contrib/sass-loader.svg" alt="deps"></a>\n<a href="https://github.com/webpack-contrib/sass-loader/actions"><img src="https://github.com/webpack-contrib/sass-loader/workflows/sass-loader/badge.svg" alt="tests"></a>\n<a href="https://codecov.io/gh/webpack-contrib/sass-loader"><img src="https://codecov.io/gh/webpack-contrib/sass-loader/branch/master/graph/badge.svg" alt="coverage"></a>\n<a href="https://gitter.im/webpack/webpack"><img src="https://badges.gitter.im/webpack/webpack.svg" alt="chat"></a>\n<a href="https://packagephobia.now.sh/result?p=sass-loader"><img src="https://packagephobia.now.sh/badge?p=sass-loader" alt="size"></a></p>\n<p>加载 Sass/SCSS 文件并将他们编译为 CSS。</p>\n<h2 id="快速开始">快速开始<a href="#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>首先，你需要安装 <code>sass-loader</code>：</p>\n<pre><code class="hljs language-console">npm install sass-loader sass webpack --save-dev\n</code></pre>\n<p><code>sass-loader</code> 需要预先安装 <a href="https://github.com/sass/dart-sass">Dart Sass</a> 或 <a href="https://github.com/sass/node-sass">Node Sass</a>（可以在这两个链接中找到更多的资料）。这可以控制所有依赖的版本， 并自由的选择使用的 Sass 实现。</p>\n<p>这样可以控制所有依赖项的版本，并选择要使用的 Sass 实现。</p>\n<blockquote>\n<p>ℹ️ 我们推荐使用 <a href="https://github.com/sass/dart-sass">Dart Sass</a>。</p>\n<p>⚠ <a href="https://github.com/sass/node-sass">Node Sass</a> 不能与 <a href="https://classic.yarnpkg.com/en/docs/pnp/">Yarn PnP</a> 特性一起正常工作。</p>\n</blockquote>\n<p>将 <code>sass-loader</code> 、<a href="/loaders/css-loader/">css-loader</a> 与 <a href="/loaders/style-loader/">style-loader</a> 进行链式调用，可以将样式以 style 标签的形式插入 DOM 中，或者使用 <a href="/plugins/mini-css-extract-plugin/">mini-css-extract-plugin</a> 将样式输出到独立的文件中。</p>\n<p>然后将本 loader 添加到你的 Webpack 配置中。例如：</p>\n<p><strong>app.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> <span class="token string">\'./style.scss\'</span><span class="token punctuation">;</span></code></pre>\n<p><strong>style.scss</strong></p>\n<pre><code class="hljs language-scss">$body-color: red;\n\nbody {\n  color: $body-color;\n}\n</code></pre>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">// 将 JS 字符串生成为 style 节点</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token comment">// 将 CSS 转化成 CommonJS 模块</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token comment">// 将 Sass 编译成 CSS</span>\n          <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>最后通过你喜欢的方式运行 <code>webpack</code>。</p>\n<h3 id="解析-import-的规则">解析 <code>import</code> 的规则<a href="#%E8%A7%A3%E6%9E%90-import-%E7%9A%84%E8%A7%84%E5%88%99" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Webpack 提供一种 <a href="/concepts/module-resolution/">解析文件的高级机制</a>。</p>\n<p><code>sass-loader</code> 使用 Sass 提供的 custom importer 特性，将所有 query 传递给 Webpack 解析引擎。只要在包名前加上 <code>~</code> ，告诉 Webpack 这不是一个相对路径，这样就可以从 <code>node_modules</code> 中 import 自己的 Sass 模块了：</p>\n<pre><code class="hljs language-scss">@import \'~bootstrap\';\n</code></pre>\n<p>重要的是，只在前面加上 <code>~</code>，因为<code>~/</code> 将会解析到用户的主目录（home directory）。\n因为 CSS 和 Sass 文件没有用于导入相关文件的特殊语法，所以 Webpack 需要区分 <code>bootstrap</code> 和 <code>~bootstrap</code>。\n<code>@import "style.scss"</code> 和 <code>@import "./style.scss";</code> 两种写法是相同的。</p>\n<h3 id="url-的问题"><code>url(...)</code> 的问题<a href="#url-%E7%9A%84%E9%97%AE%E9%A2%98" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>由于 Saass 的实现没有提供 <a href="https://github.com/sass/libsass/issues/532">url 重写</a>的功能，所以相关的资源都必须是相对于输出文件（ouput）而言的。</p>\n<ul>\n<li>如果生成的 CSS 传递给了 <code>css-loader</code>，则所有的 url 规则都必须是相对于入口文件的（例如：<code>main.scss</code>）。</li>\n<li>如果仅仅生成了 CSS 文件，没有将其传递给 <code>css-loader</code>，那么所有的 url 都是相对于网站的根目录的。</li>\n</ul>\n<p>第一种情况可能会带来一些困扰。通常情况下我们希望相对路径引用的解析是相对于声明它的 <code>.sass</code>/<code>.scss</code> 文件（如同在 <code>.css</code> 文件中一样）。</p>\n<p>幸运的是，有两种方法可以解决这个问题：</p>\n<ul>\n<li>将 <a href="https://github.com/bholloway/resolve-url-loader">resolve-url-loader</a> 设置于 loader 链中的 <code>sass-loader</code> 之前，就可以重写 url。</li>\n<li>Library 作者一般都会提供变量，用来设置资源路径。比如 <a href="https://github.com/twbs/bootstrap-sass">bootstrap-sass</a> 可以通过 <code>$icon-font-path</code> 进行设置。</li>\n</ul>\n<h2 id="配置选项">配置选项<a href="#%E9%85%8D%E7%BD%AE%E9%80%89%E9%A1%B9" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<table>\n<thead>\n<tr>\n<th align="center">名称</th>\n<th align="center">类型</th>\n<th align="center">默认值</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>名称</p><p>类型</p><p>默认值</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#implementation"><code>implementation</code></a></strong><p class="description mobile"><code>{Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Object}</code></td>\n<td align="center"><code>sass</code></td>\n<td align="left">设置使用的 Sass 的实现。</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>名称</p><p>类型</p><p>默认值</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#sassoptions"><code>sassOptions</code></a></strong><p class="description mobile"><code>{Object\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Object\\|Function}</code></td>\n<td align="center">Sass 实现的默认值</td>\n<td align="left">Sass 自身选项。</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>名称</p><p>类型</p><p>默认值</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#sourcemap"><code>sourceMap</code></a></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>compiler.devtool</code></td>\n<td align="left">启用 / 禁用 source maps 的生成。</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>名称</p><p>类型</p><p>默认值</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#additionaldata"><code>additionalData</code></a></strong><p class="description mobile"><code>{String\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Function}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">在实际的输入文件之前添加 \n<code>Sass</code>\n /\n<code>SCSS</code>\n 代码。</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>名称</p><p>类型</p><p>默认值</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#webpackimporter"><code>webpackImporter</code></a></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>true</code></td>\n<td align="left">启用 / 禁用默认的 Webpack importer。</td>\n</tr>\n</tbody>\n</table>\n<h3 id="implementation"><code>implementation</code><a href="#implementation" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>类型： <code>Object</code>\n默认值： <code>sass</code></p>\n<p>特殊的 <code>implementation</code> 选项确定要使用的 Sass 实现。 </p>\n<p>默认情况下，loader 将会根据你的依赖解析需要使用的实现。\n只需将必需的实现添加到 <code>package.json</code>（<code>sass</code> 或 <code>node-sass</code> 包）中并安装依赖项即可。</p>\n<p>示例，此时 <code>sass-loader</code> 将会使用 <code>sass</code> （<code>dart-sass</code>）实现：</p>\n<p><strong>package.json</strong></p>\n<pre><code class="hljs language-json"><span class="token punctuation">{</span>\n  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"sass-loader"</span><span class="token operator">:</span> <span class="token string">"^7.2.0"</span><span class="token punctuation">,</span>\n    <span class="token property">"sass"</span><span class="token operator">:</span> <span class="token string">"^1.22.10"</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<p>示例，此时 <code>sass-loader</code> 将会使用 <code>node-sass</code> 实现：</p>\n<p><strong>package.json</strong></p>\n<pre><code class="hljs language-json"><span class="token punctuation">{</span>\n  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"sass-loader"</span><span class="token operator">:</span> <span class="token string">"^7.2.0"</span><span class="token punctuation">,</span>\n    <span class="token property">"node-sass"</span><span class="token operator">:</span> <span class="token string">"^4.0.0"</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<p>需注意同时安装 <code>node-sass</code> 和 <code>sass</code> 的情况！默认情况下，<code>sass-loader</code> 会选择 <code>sass</code>。\n为了避免这种情况，你可以使用 <code>implementation</code> 选项。</p>\n<p><code>implementation</code> 选项可以以模块的形式接受 <code>sass</code>（<code>Dart Sass</code>）或 <code>node-sass</code>。</p>\n<p>例如，为了使用 Dart Sass，你应该传递：</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              <span class="token comment">// `dart-sass` 是首选</span>\n              implementation<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'sass\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>需要注意的是，当使用 <code>sass</code>（<code>Dart Sass</code>）时，由于异步回调的开销，通常情况下<strong>同步编译的速度是异步编译速度的两倍</strong>。\n为了避免这种开销，你可以使用 <a href="https://www.npmjs.com/package/fibers">fibers</a> 包从同步代码中调用异步导入程序。</p>\n<p>如果可能，我们会自动注入 <a href="https://github.com/laverdet/node-fibers"><code>fibers</code></a> 软件包（设置 <code>sassOptions.fiber</code>）（当然需要你安装 <a href="https://github.com/laverdet/node-fibers"><code>fibers</code></a> 包）。</p>\n<p><strong>package.json</strong></p>\n<pre><code class="hljs language-json"><span class="token punctuation">{</span>\n  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"sass-loader"</span><span class="token operator">:</span> <span class="token string">"^7.2.0"</span><span class="token punctuation">,</span>\n    <span class="token property">"sass"</span><span class="token operator">:</span> <span class="token string">"^1.22.10"</span><span class="token punctuation">,</span>\n    <span class="token property">"fibers"</span><span class="token operator">:</span> <span class="token string">"^4.0.1"</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<p>你可以通过向 <code>sassOptions.fiber</code> 传递 <code>false</code> 参数关闭自动注入的 <a href="https://github.com/laverdet/node-fibers"><code>fibers</code></a> 包。</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              implementation<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'sass\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              sassOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                fiber<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>你还可以通过一下代码传递 <code>fiber</code>：</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              implementation<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'sass\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              sassOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                fiber<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'fibers\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="sassoptions"><code>sassOptions</code><a href="#sassoptions" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>类型：<code>Object|Function</code>\n默认值：Sass 实现的默认值</p>\n<p><a href="http://sass-lang.com/dart-sass">Dart Sass</a> 或者 <a href="https://github.com/sass/node-sass">Node Sass</a> 实现的选项。</p>\n<blockquote>\n<p>ℹ️ <code>indentedSyntax</code> 选项值为 <code>true</code>，是对 <code>sass</code> 的扩展。</p>\n<p>ℹ️ 像 <code>data</code> 和 <code>file</code> 这样的选项是不可用的，且会被忽略。</p>\n<p>ℹ 我们推荐不要设置 <code>outFile</code>，<code>sourceMapContents</code>，<code>sourceMapEmbed</code>，<code>sourceMapRoot</code> 这些选项，因为当 <code>sourceMap</code> 是 <code>true</code> 时，<code>sass-loader</code> 会自动设置这些选项。</p>\n<p>ℹ️ 可以使用 <code>this.webpackLoaderContext</code> 属性访问自定义 importer 中的 <a href="/api/loaders/#the-loader-context">loader 上下文</a>。</p>\n</blockquote>\n<p><code>sass</code> （<code>dart-sass</code>）和 <code>node-sass</code> 之间的选项略有不同。</p>\n<p>在使用他们之前，请查阅有关文档：</p>\n<ul>\n<li><a href="https://github.com/sass/dart-sass#javascript-api">Dart Sass 文档</a> 提供了所有可用的 <code>sass</code> 选项。</li>\n<li><a href="https://github.com/sass/node-sass/#options">Node Sass 文档</a> 提供了所有可用的 <code>node-sass</code> 选项。</li>\n</ul>\n<h4 id="object"><code>Object</code><a href="#object" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>使用对象设置 Sass 实现的启动选项。</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              sassOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                indentWidth<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n                includePaths<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'absolute/path/a\'</span><span class="token punctuation">,</span> <span class="token string">\'absolute/path/b\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="function"><code>Function</code><a href="#function" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>允许通过 loader 上下文为 Sass 实现设置不同的选项。</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              sassOptions<span class="token punctuation">:</span> <span class="token punctuation">(</span>loaderContext<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token comment">// 有关可用属性的更多信息 https://webpack.js.org/api/loaders/</span>\n                <span class="token keyword">const</span> <span class="token punctuation">{</span> resourcePath<span class="token punctuation">,</span> rootContext <span class="token punctuation">}</span> <span class="token operator">=</span> loaderContext<span class="token punctuation">;</span>\n                <span class="token keyword">const</span> relativePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>rootContext<span class="token punctuation">,</span> resourcePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>relativePath <span class="token operator">===</span> <span class="token string">\'styles/foo.scss\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                    includePaths<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'absolute/path/c\'</span><span class="token punctuation">,</span> <span class="token string">\'absolute/path/d\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                  includePaths<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'absolute/path/a\'</span><span class="token punctuation">,</span> <span class="token string">\'absolute/path/b\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="sourcemap"><code>sourceMap</code><a href="#sourcemap" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>类型：<code>Boolean</code>\n默认值：取决于 <code>compiler.devtool</code> 的值</p>\n<p>开启/关闭生成 source map。</p>\n<p>默认情况下 source maps 的生成取决于 <a href="/configuration/devtool/"><code>devtool</code></a> 选项。\n除 <code>eval</code> 和 <code>false</code> 之外的所有值都将开启 source map 的生成。</p>\n<blockquote>\n<p>ℹ 如果为 <code>true</code> 将会忽略来自 <code>sassOptions</code> 的 <code>sourceMap</code>，<code>sourceMapRoot</code>，<code>sourceMapEmbed</code>，<code>sourceMapContents</code> 和 <code>omitSourceMapUrl</code> 选项。</p>\n</blockquote>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<blockquote>\n<p>ℹ 在极少数情况下，<code>node-sass</code> 会输出无效的 source maps（这是 <code>node-sass</code> 的 bug）。</p>\n<blockquote>\n<p>为了避免这种情况，你可以尝试将 <code>node-sass</code> 更新到最新版本，或者可以尝试将 <code>sassOptions</code> 中的 <code>outputStyle</code> 选项设置为 <code>compressed</code>。</p>\n</blockquote>\n</blockquote>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n              sassOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                outputStyle<span class="token punctuation">:</span> <span class="token string">\'compressed\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="additionaldata"><code>additionalData</code><a href="#additionaldata" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>类型：<code>String|Function</code>\n默认值：<code>undefined</code></p>\n<p>在实际的文件之前要添加的 <code>Sass</code> / <code>SCSS</code> 代码。\n在这种情况下，<code>sass-loader</code> 将不会覆盖 <code>data</code> 选项，而只是将它<strong>拼接</strong>在入口文件内容之前。</p>\n<p>当某些 Sass 变量取决于环境时，这非常有用：</p>\n<h4 id="string"><code>String</code><a href="#string" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              additionalData<span class="token punctuation">:</span> <span class="token string">\'$env: \'</span> <span class="token operator">+</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">+</span> <span class="token string">\';\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="function-1"><code>Function</code><a href="#function-1" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              additionalData<span class="token punctuation">:</span> <span class="token punctuation">(</span>content<span class="token punctuation">,</span> loaderContext<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token comment">// 有关可用属性的更多信息 https://webpack.js.org/api/loaders/</span>\n                <span class="token keyword">const</span> <span class="token punctuation">{</span> resourcePath<span class="token punctuation">,</span> rootContext <span class="token punctuation">}</span> <span class="token operator">=</span> loaderContext<span class="token punctuation">;</span>\n                <span class="token keyword">const</span> relativePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>rootContext<span class="token punctuation">,</span> resourcePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>relativePath <span class="token operator">===</span> <span class="token string">\'styles/foo.scss\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  <span class="token keyword">return</span> <span class="token string">\'$value: 100px;\'</span> <span class="token operator">+</span> content<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token keyword">return</span> <span class="token string">\'$value: 200px;\'</span> <span class="token operator">+</span> content<span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="webpackimporter"><code>webpackImporter</code><a href="#webpackimporter" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>类型：<code>Boolean</code>\n默认值：<code>true</code></p>\n<p>开启 / 关闭默认的 Webpack importer。</p>\n<p>在某些情况下，可以提高性能。但是请谨慎使用，因为 aliases 和以 <code>〜</code> 开头的 <code>@import</code> 规则将不起作用。\n你可以传递自己的 <code>importer</code> 来解决这个问题（参阅 <a href="https://github.com/sass/node-sass#importer--v200---experimental"><code>importer docs</code></a>）。</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              webpackImporter<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h2 id="示例">示例<a href="#%E7%A4%BA%E4%BE%8B" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<h3 id="提取样式表">提取样式表<a href="#%E6%8F%90%E5%8F%96%E6%A0%B7%E5%BC%8F%E8%A1%A8" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>对于生产版本，我们建议从 bundle 中提取 CSS，以便之后可以使 CSS/JS 资源并行加载。</p>\n<p>从 bundle 中提取样式表，有 2 种实用的方式：</p>\n<ul>\n<li><a href="/plugins/mini-css-extract-plugin/">mini-css-extract-plugin</a>（在使用 webpack 4 时使用此 plugin，它将适用于所有用例）</li>\n<li><a href="https://github.com/peerigon/extract-loader">extract-loader</a>（简单，专门针对 css-loader 的输出）</li>\n</ul>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">// 在开发过程中回退到 style-loader</span>\n          process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">\'production\'</span>\n            <span class="token operator">?</span> <span class="token string">\'style-loader\'</span>\n            <span class="token punctuation">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// 与 webpackOptions.output 中的选项相似</span>\n      <span class="token comment">// 所有的选项都是可选的</span>\n      filename<span class="token punctuation">:</span> <span class="token string">\'[name].css\'</span><span class="token punctuation">,</span>\n      chunkFilename<span class="token punctuation">:</span> <span class="token string">\'[id].css\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="source-maps">Source maps<a href="#source-maps" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>开启/关闭 source map 的生成。</p>\n<p>为了开启 CSS source maps，需要将 <code>sourceMap</code> 选项作为参数，传递给 <code>sass-loader</code> 和 <code>css-loader</code>。</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  devtool<span class="token punctuation">:</span> <span class="token string">\'source-map\'</span><span class="token punctuation">,</span> <span class="token comment">// 任何类似于 "source-map" 的选项都是支持的</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>如果你要在 Chrome 中编辑原始的 Sass 文件，建议阅读 <a href="https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0">这篇不错的博客</a>。具体示例参考 <a href="https://github.com/webpack-contrib/sass-loader/tree/master/test">test/sourceMap</a>。</p>\n<h2 id="贡献">贡献<a href="#%E8%B4%A1%E7%8C%AE" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>如果你还没有阅读过我们的贡献指南，请花一点时间阅读它。</p>\n<p><a href="https://github.com/webpack-contrib/sass-loader/blob/master/.github/CONTRIBUTING.md">CONTRIBUTING</a></p>\n<h2 id="license">License<a href="#license" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><a href="https://github.com/webpack-contrib/sass-loader/blob/master/LICENSE">MIT</a></p>\n'}}]);